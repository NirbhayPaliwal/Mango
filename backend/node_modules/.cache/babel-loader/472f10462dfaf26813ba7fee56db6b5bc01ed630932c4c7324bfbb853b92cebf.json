{"ast":null,"code":"var _s = $RefreshSig$();\n// useAuth.js\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nconst useAuth = async () => {\n  _s();\n  const [curr, setCurr] = useState(null);\n  const [whichUser, setWhichUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const token = Cookies.get(\"jwt\");\n  if (token) {\n    try {\n      const response = await fetch(\"http://localhost:5000/decode\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setCurr(data.decoded.user);\n      setWhichUser(data.decoded.flag);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  } else {\n    console.error(\"No JWT token found\");\n  }\n  setLoading(false);\n  return {\n    curr,\n    whichUser,\n    loading\n  };\n};\n_s(useAuth, \"fqyCOt48Qtk8mQClsQcfJ2h43mI=\");\nexport default useAuth;","map":{"version":3,"names":["useState","Cookies","useAuth","_s","curr","setCurr","whichUser","setWhichUser","loading","setLoading","token","get","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","decoded","user","flag","error","console"],"sources":["C:/Users/hp/Desktop/this/mango/src/useauth.js"],"sourcesContent":["// useAuth.js\r\nimport { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useAuth = async () => {\r\n  const [curr, setCurr] = useState(null);\r\n  const [whichUser, setWhichUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n      const token = Cookies.get(\"jwt\");\r\n      if (token) {\r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/decode\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ token }),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n\r\n          const data = await response.json();\r\n          setCurr(data.decoded.user);\r\n          setWhichUser(data.decoded.flag);\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"No JWT token found\");\r\n      }\r\n      setLoading(false);\r\n\r\n  return { curr, whichUser, loading };\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,KAAK,GAAGT,OAAO,CAACU,GAAG,CAAC,KAAK,CAAC;EAChC,IAAID,KAAK,EAAE;IACT,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCjB,OAAO,CAACgB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;MAC1BjB,YAAY,CAACc,IAAI,CAACE,OAAO,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC,MAAM;IACLC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;EACrC;EACAjB,UAAU,CAAC,KAAK,CAAC;EAErB,OAAO;IAAEL,IAAI;IAAEE,SAAS;IAAEE;EAAQ,CAAC;AACrC,CAAC;AAACL,EAAA,CAhCID,OAAO;AAkCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}